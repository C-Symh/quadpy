# -*- coding: utf-8 -*-
#
from __future__ import division
import warnings

from ..helpers import untangle, fsd, z


class Stenger(object):
    '''
    Review: Tabulation of Certain Fully Symmetric Numerical Integration
    Formulas of Degree 7, 9 and 11 by Frank Stenger,
    Mathematics of Computation,
    Vol. 25, No. 116 (Oct., 1971), pp. 935+s58-s125,
    <https://www.jstor.org/stable/2004361>.
    '''
    def __init__(self, n, variant):
        self.degree = 7
        self.dim = n

        if variant == 'a':
            if n == 3:
                u = 0.285231516480645
                v = 0.765055323929465
                B = [
                    -0.542565297000466e+01,
                    +0.490769827031175e+01,
                    +0.318402337562406,
                    -0.391335495408044e+01,
                    +0.436675887074467e-01,
                    +0.308676098900275e+01,
                    ]
            elif n == 4:
                u = 0.266216481931920
                v = 0.727412389740367
                B = [
                    -0.678226800331914e+02,
                    +0.299222999307746e+02,
                    +0.240390523860780,
                    -0.118821423811283e+02,
                    +0.459003238309213e-01,
                    +0.361018024911844e+01,
                    ]
            elif n == 5:
                self.degree = 1
                warnings.warn(
                    'Stenger\'s rule for n==5 is wrongly stated and'
                    'only has degree 1, not 7.'
                    )
                u = 0.250562808085732
                v = 0.694746590606866
                B = [
                    -0.220221371883822e+03,
                    +0.730167125339176e+02,
                    +0.143281369027706,
                    -0.203714128400494e+02,
                    +0.448293291677155e-01,
                    +0.383685702879441e+01,
                    ]
            else:
                assert n == 6
                u = 0.237383303308445
                v = 0.666069941755647
                B = [
                    -0.472474075695084e+03,
                    +0.127114265148486e+03,
                    +0.477511403723473e-01,
                    -0.275405124688594e+02,
                    +0.410240990676946e-01,
                    +0.376041809497708e+01,
                    ]
        else:
            assert variant == 'b'
            if n == 3:
                u = 0.765055323929465
                v = 0.285231516480645
                B = [
                    +0.192021185324132e+02,
                    +0.351560542364457,
                    -0.743934568569924e+01,
                    +0.270884863064213e-01,
                    +0.226016702392506e+01,
                    +0.828955120051268e-02,
                    ]
            elif n == 4:
                u = 0.727412389740367
                v = 0.266216481931920
                B = [
                    +0.474254976042737e+02,
                    +0.344486899232533,
                    -0.133998630586466e+02,
                    +0.112015320403370e-01,
                    +0.255857861534543e+01,
                    +0.867469794764608e-02,
                    ]
            elif n == 5:
                u = 0.694746590606866
                v = 0.250562807085732
                B = [
                    +0.860517194425776e+02,
                    +0.345922662173719,
                    -0.190678561571482e+02,
                    -0.583099411878751e-02,
                    +0.264972933271699e+01,
                    +0.844338721441717e-02,
                    ]
            else:
                assert n == 6
                u = 0.666069941755647
                v = 0.237383303308445
                B = [
                    +0.127959890358419e+03,
                    +0.355983426079872,
                    -0.233024586505972e+02,
                    -0.206223580738102e-01,
                    +0.254283229095729e+01,
                    +0.770580714268811e-02,
                    ]

        # TODO According to Stroud,
        #      Stenger's original article has data up to n == 20.

        data = [
            (B[0], z(n)),
            (B[1], fsd(n, u, 1)),
            (B[2], fsd(n, v, 1)),
            (B[3], fsd(n, u, 2)),
            (B[4], fsd(n, v, 2)),
            (B[5], fsd(n, u, 3)),
            ]

        self.points, self.weights = untangle(data)
        return
